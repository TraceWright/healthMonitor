{"ast":null,"code":"var _jsxFileName = \"/Users/traceywright/Code/auxita/disease-classifier/client/src/bloodPressure/BloodPressureComponent.tsx\";\nimport React from 'react';\nimport './bloodPressure.scss';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Hypertension extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.postData = async (url = '', data = {}) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      return await response.json();\n    };\n\n    this.state = {\n      sysBp: undefined,\n      diaBp: undefined,\n      atDate: new Date(),\n      classification: undefined\n    };\n  } // formatDate(date: Date) {\n  //     return `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-` +\n  //         `${date.getDate().toString().padStart(2, \"0\")}`;\n  // }\n\n\n  dateChangeHandler(date) {\n    this.setState({\n      atDate: date\n    });\n  }\n\n  render() {\n    // this.postData(`${process.env.REACT_APP_API_URL}/hypertension`, { sysBp: 180, diaBp: 80, atDate: Date.now() })\n    // .then(data => console.log(data))\n    // .catch(error => console.error(error));\n    return React.createElement(\"div\", {\n      className: \"hypertension-form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Systole\"), React.createElement(\"input\", {\n      id: \"sysBp\",\n      autoComplete: \"off\",\n      value: this.state.sysBp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Diastole\"), React.createElement(\"input\", {\n      id: \"diaBp\",\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Date\"), React.createElement(DatePicker, {\n      selected: this.state.atDate,\n      onChange: event => this.dateChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Hypertension;","map":{"version":3,"sources":["/Users/traceywright/Code/auxita/disease-classifier/client/src/bloodPressure/BloodPressureComponent.tsx"],"names":["React","DatePicker","Hypertension","PureComponent","constructor","props","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","json","state","sysBp","undefined","diaBp","atDate","Date","classification","dateChangeHandler","date","setState","render","event"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;AAUA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,aAAjC,CAA+D;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACvB,UAAMA,KAAN;;AADuB,SAgB3BC,QAhB2B,GAgBhB,OAAOC,GAAG,GAAG,EAAb,EAAiBC,IAAI,GAAG,EAAxB,KAA+B;AACpC,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAChCI,QAAAA,MAAM,EAAE,MADwB;AAEhCC,QAAAA,IAAI,EAAE,MAF0B;AAGhCC,QAAAA,KAAK,EAAE,UAHyB;AAIhCC,QAAAA,WAAW,EAAE,aAJmB;AAKhCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SALuB;AAQhCC,QAAAA,QAAQ,EAAE,QARsB;AAShCC,QAAAA,QAAQ,EAAE,aATsB;AAUhCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAV0B,OAAN,CAA5B;AAYF,aAAO,MAAMC,QAAQ,CAACY,IAAT,EAAb;AACH,KA9B0B;;AAGvB,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,SADE;AAETC,MAAAA,KAAK,EAAED,SAFE;AAGTE,MAAAA,MAAM,EAAE,IAAIC,IAAJ,EAHC;AAITC,MAAAA,cAAc,EAAEJ;AAJP,KAAb;AAMH,GAV0D,CAY3D;AACA;AACA;AACA;;;AAkBAK,EAAAA,iBAAiB,CAACC,IAAD,EAAY;AACzB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAEI;AAAV,KAAd;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAEA,WAAO;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADG,EACwC;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,YAAY,EAAC,KAA/B;AAAqC,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxC,EAEH;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFG,EAEyC;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzC,EAGH;AAAO,MAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHG,EAIH,oBAAC,UAAD;AACI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWI,MADzB;AAEI,MAAA,QAAQ,EAAGO,KAAD,IAAW,KAAKJ,iBAAL,CAAuBI,KAAvB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJG,CAAP;AASH;;AAnD0D;;AAsD/D,eAAe/B,YAAf","sourcesContent":["import React from 'react';\nimport './bloodPressure.scss';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface IProps {}\ninterface IState {\n    sysBp: number | undefined,\n    diaBp: number | undefined,\n    atDate: Date,\n    classification: string | undefined,\n}\n \nclass Hypertension extends React.PureComponent<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        \n        this.state = {\n            sysBp: undefined,\n            diaBp: undefined,\n            atDate: new Date(),\n            classification: undefined,\n        }\n    }\n\n    // formatDate(date: Date) {\n    //     return `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-` +\n    //         `${date.getDate().toString().padStart(2, \"0\")}`;\n    // }\n\n    postData = async (url = '', data = {}) => {\n          const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n\n    dateChangeHandler(date: any) {\n        this.setState({ atDate: date });\n    }\n\n    render() {\n        // this.postData(`${process.env.REACT_APP_API_URL}/hypertension`, { sysBp: 180, diaBp: 80, atDate: Date.now() })\n        // .then(data => console.log(data))\n        // .catch(error => console.error(error));\n\n        return <div className=\"hypertension-form-input\">\n            <label className=\"form-lbl\">Systole</label><input id=\"sysBp\" autoComplete=\"off\" value={this.state.sysBp}/>\n            <label className=\"form-lbl\">Diastole</label><input id=\"diaBp\" autoComplete=\"off\"/>\n            <label className=\"form-lbl\">Date</label>\n            <DatePicker\n                selected={this.state.atDate}\n                onChange={(event) => this.dateChangeHandler(event)}\n            />\n        </div>\n    }\n}\n\nexport default Hypertension;"]},"metadata":{},"sourceType":"module"}