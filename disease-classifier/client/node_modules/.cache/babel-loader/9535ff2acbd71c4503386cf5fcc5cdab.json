{"ast":null,"code":"import _slicedToArray from \"/Users/traceywright/Code/auxita/disease-classifier/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/traceywright/Code/auxita/disease-classifier/client/src/routing/menu.tsx\";\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport './menu.scss';\n\nclass MenuContainer extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: '',\n      activeItemPosition: 0,\n      activeItemColor: '',\n      menuItems: [{\n        text: 'Home'\n      }, {\n        text: 'Hypertension'\n      }, {\n        text: 'Kidney Disease'\n      }, {\n        text: 'About'\n      }, {\n        text: 'Contact'\n      }],\n      redirect: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      redirect: false\n    });\n  }\n\n  handleClick(activeItem) {\n    return e => {\n      e.preventDefault();\n      this.setState({\n        activeItem,\n        //   activeItemPosition: e.target.offsetTop,\n        //   activeItemColor: window.getComputedStyle(e.target).getPropertyValue('background-color'),\n        redirect: true\n      });\n    };\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        push: true,\n        to: this.state.activeItem.replace(' ', ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }\n\n    const menuItems = this.state.menuItems.map(item => React.createElement(MenuItem, {\n      item: item,\n      handleClick: this.handleClick,\n      key: item.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"menu-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, menuItems));\n  }\n\n}\n\nfunction MenuItem(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        hovered = _useState2[0],\n        setHovered = _useState2[1];\n\n  const toggleHover = () => setHovered(!hovered);\n\n  return React.createElement(\"div\", {\n    id: props.item.text,\n    onClick: props.handleClick(props.item.text),\n    className: hovered ? 'menu-item menu-item--hover' : 'menu-item',\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.item.text.toUpperCase());\n}\n\nexport default MenuContainer;","map":{"version":3,"sources":["/Users/traceywright/Code/auxita/disease-classifier/client/src/routing/menu.tsx"],"names":["React","useState","Redirect","MenuContainer","PureComponent","constructor","props","state","activeItem","activeItemPosition","activeItemColor","menuItems","text","redirect","handleClick","bind","componentDidUpdate","setState","e","preventDefault","render","replace","map","item","MenuItem","hovered","setHovered","toggleHover","toUpperCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,aAAP;;AAWA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,aAAlC,CAAgE;AAC5DC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACzB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,kBAAkB,EAAE,CAFT;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,SAAS,EAAE,CACP;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADO,EAEP;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFO,EAGP;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAHO,EAIP;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAJO,EAKP;AAAEA,QAAAA,IAAI,EAAE;AAAR,OALO,CAJA;AAWXC,MAAAA,QAAQ,EAAE;AAXC,KAAb;AAcA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACH;;AAEDC,EAAAA,WAAW,CAACN,UAAD,EAAkB;AAC3B,WAAQU,CAAD,IAAY;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKF,QAAL,CAAc;AACZT,QAAAA,UADY;AAEd;AACA;AACEK,QAAAA,QAAQ,EAAE;AAJE,OAAd;AAMD,KARD;AASD;;AAEDO,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKb,KAAL,CAAWM,QAAf,EAAyB;AACrB,aAAO,oBAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAE,KAAKN,KAAL,CAAWC,UAAX,CAAsBa,OAAtB,CAA8B,GAA9B,EAAmC,EAAnC,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,UAAMV,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAAX,CAAqBW,GAArB,CAAyBC,IAAI,IAAI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE,KAAKT,WAAxC;AAAqD,MAAA,GAAG,EAAES,IAAI,CAACX,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CAAlB;AACA,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACID,SADJ,CADJ,CADJ;AAOH;;AAjD2D;;AAoDhE,SAASa,QAAT,CAAkBlB,KAAlB,EAA8B;AAAA,oBACIL,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACnBwB,OADmB;AAAA,QACVC,UADU;;AAE1B,QAAMC,WAAW,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAApC;;AACA,SACI;AACI,IAAA,EAAE,EAAEnB,KAAK,CAACiB,IAAN,CAAWX,IADnB;AAEI,IAAA,OAAO,EAAEN,KAAK,CAACQ,WAAN,CAAkBR,KAAK,CAACiB,IAAN,CAAWX,IAA7B,CAFb;AAGI,IAAA,SAAS,EAAEa,OAAO,GAAG,4BAAH,GAAkC,WAHxD;AAII,IAAA,YAAY,EAAEE,WAJlB;AAKI,IAAA,YAAY,EAAEA,WALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOMrB,KAAK,CAACiB,IAAN,CAAWX,IAAX,CAAgBgB,WAAhB,EAPN,CADJ;AAWH;;AAGC,eAAezB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport './menu.scss';\n\ninterface IProps {}\ninterface IState {\n    activeItem: string;\n    activeItemPosition: number,\n    activeItemColor: string,\n    menuItems: Array<{ text: string}>,\n    redirect: boolean,\n}\n\nclass MenuContainer extends React.PureComponent<IProps, IState> {\n    constructor(props: IProps) {\n      super(props)\n      \n      this.state = {\n        activeItem: '',\n        activeItemPosition: 0,\n        activeItemColor: '',\n        menuItems: [\n            { text: 'Home' },\n            { text: 'Hypertension' },\n            { text: 'Kidney Disease' },\n            { text: 'About' },\n            { text: 'Contact' },\n        ],\n        redirect: false,\n      }\n      \n      this.handleClick = this.handleClick.bind(this)\n    }\n\n    componentDidUpdate() {\n        this.setState({ redirect: false });\n    }\n    \n    handleClick(activeItem: any) {\n      return (e: any) => {\n        e.preventDefault()      \n        this.setState({\n          activeItem,\n        //   activeItemPosition: e.target.offsetTop,\n        //   activeItemColor: window.getComputedStyle(e.target).getPropertyValue('background-color'),\n          redirect: true,\n        })\n      }\n    }\n    \n    render() {\n        if (this.state.redirect) {\n            return <Redirect push to={this.state.activeItem.replace(' ', '')} />;\n        }\n        const menuItems = this.state.menuItems.map(item => <MenuItem item={item} handleClick={this.handleClick} key={item.text}/>)\n        return (\n            <React.Fragment>\n                <div className='menu-container' >\n                  { menuItems }\n                </div>\n            </React.Fragment>\n        )\n    }\n  }\n \nfunction MenuItem(props: any) {\n    const [hovered, setHovered] = useState(false);\n    const toggleHover = () => setHovered(!hovered);\n    return (\n        <div \n            id={props.item.text}\n            onClick={props.handleClick(props.item.text)}\n            className={hovered ? 'menu-item menu-item--hover' : 'menu-item'}\n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n        >\n            { props.item.text.toUpperCase() }\n        </div>\n    )\n}\n\n\n  export default MenuContainer;"]},"metadata":{},"sourceType":"module"}