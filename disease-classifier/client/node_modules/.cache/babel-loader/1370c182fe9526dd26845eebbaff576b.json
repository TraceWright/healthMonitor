{"ast":null,"code":"var _jsxFileName = \"/Users/traceywright/Code/auxita/disease-classifier/client/src/hypertension/Hypertension.tsx\";\nimport React from 'react';\nimport './hypertension.scss';\n\nclass Hypertension extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.postData = async (url = '', data = {}) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      return await response.json();\n    };\n\n    this.state = {\n      formData: {\n        sysBp: undefined,\n        diaBp: undefined,\n        atDate: undefined,\n        classification: undefined\n      }\n    };\n  }\n\n  formatDate() {\n    let date = new Date();\n    let d = date.getFullYear().toString() + '-' + (date.getMonth() + 1).toString().padStart(2) + '-' + date.getDate().toString().padStart(2);\n    console.log(d);\n    return d;\n  }\n\n  inputChangedHandler(e) {\n    console.log(e);\n  }\n\n  render() {\n    this.postData(\"\".concat(process.env.REACT_APP_API_URL, \"/hypertension\"), {\n      sysBp: 180,\n      diaBp: 80,\n      atDate: Date.now()\n    }).then(data => console.log(data)).catch(error => console.error(error));\n    return React.createElement(\"div\", {\n      className: \"hypertension-form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Systole\"), React.createElement(\"input\", {\n      id: \"sysBp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"mmHg\"), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Diastole\"), React.createElement(\"input\", {\n      id: \"diaBp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-units\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"mmHg\"), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      id: \"atDate\",\n      type: \"date\",\n      value: this.formatDate(),\n      onChange: event => this.inputChangedHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Hypertension;","map":{"version":3,"sources":["/Users/traceywright/Code/auxita/disease-classifier/client/src/hypertension/Hypertension.tsx"],"names":["React","Hypertension","PureComponent","constructor","props","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","json","state","formData","sysBp","undefined","diaBp","atDate","classification","formatDate","date","Date","d","getFullYear","toString","getMonth","padStart","getDate","console","log","inputChangedHandler","e","render","process","env","REACT_APP_API_URL","now","then","catch","error","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './hypertension.scss';\n\ninterface IProps {}\ninterface IState {\n    formData: {\n        sysBp: number | undefined,\n        diaBp: number | undefined,\n        atDate: Date | undefined,\n        classification: string | undefined,\n    }\n}\n \nclass Hypertension extends React.PureComponent<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        \n        this.state = {\n            formData: {\n                sysBp: undefined,\n                diaBp: undefined,\n                atDate: undefined,\n                classification: undefined,\n            }\n        }\n    }\n\n    formatDate() {\n        let date = new Date();\n        let d = date.getFullYear().toString() + '-' + (date.getMonth() + 1).toString().padStart(2) + \n        '-' + date.getDate().toString().padStart(2);\n        console.log(d)\n        return d\n    }\n\n    postData = async (url = '', data = {}) => {\n          const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n\n    inputChangedHandler(e: any) {\n        console.log(e);\n    }\n\n    render() {\n\n        this.postData(`${process.env.REACT_APP_API_URL}/hypertension`, { sysBp: 180, diaBp: 80, atDate: Date.now() })\n        .then(data => console.log(data))\n        .catch(error => console.error(error));\n\n        return <div className=\"hypertension-form-input\">\n            <label className=\"form-lbl\">Systole</label><input id=\"sysBp\"/><label className=\"form-units\">mmHg</label>\n            <label className=\"form-lbl\">Diastole</label><input id=\"diaBp\"/><label className=\"form-units\">mmHg</label>\n            <label className=\"form-lbl\">Date</label><input id=\"atDate\" type=\"date\" value={this.formatDate()} onChange={(event)=>this.inputChangedHandler(event)}/>\n        </div>\n    }\n}\n\nexport default Hypertension;"]},"metadata":{},"sourceType":"module"}