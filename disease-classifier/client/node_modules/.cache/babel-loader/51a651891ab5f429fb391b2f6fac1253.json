{"ast":null,"code":"var _jsxFileName = \"/Users/traceywright/Code/auxita/disease-classifier/client/src/bloodPressure/BloodPressureComponent.tsx\";\nimport React from 'react';\nimport './bloodPressure.scss';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Hypertension extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.postData = async (url = '', data = {}) => {\n      const response = await fetch(url, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrer: 'no-referrer',\n        body: JSON.stringify(data)\n      });\n      return await response.json();\n    };\n\n    this.state = {\n      sysBp: undefined,\n      diaBp: undefined,\n      atDate: new Date(),\n      classification: undefined\n    };\n  } // formatDate(date: Date) {\n  //     return `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-` +\n  //         `${date.getDate().toString().padStart(2, \"0\")}`;\n  // }\n\n\n  dateChangeHandler(date) {\n    this.setState({\n      atDate: new Date(date)\n    });\n  }\n\n  submit(sysBp, diaBp, atDate) {\n    this.postData(\"\".concat(process.env.REACT_APP_API_URL, \"/hypertension\"), {\n      sysBp: sysBp,\n      diaBp: diaBp,\n      atDate: atDate\n    }).then(data => console.log(data)) // TODO\n    .catch(error => console.error(error));\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"hypertension-form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Systole\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"sysBp\",\n      autoComplete: \"off\",\n      value: this.state.sysBp,\n      onChange: event => this.setState({\n        sysBp: parseInt(event.target.value)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Diastole\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"diaBp\",\n      autoComplete: \"off\",\n      value: this.state.diaBp,\n      onChange: event => this.setState({\n        diaBp: parseInt(event.target.value)\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"form-lbl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Date\"), React.createElement(DatePicker, {\n      selected: this.state.atDate,\n      onChange: event => this.dateChangeHandler(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      onClick: () => this.submit(this.state.sysBp ? this.state.sysBp : -1, this.state.diaBp ? this.state.diaBp : -1, this.state.atDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Hypertension;","map":{"version":3,"sources":["/Users/traceywright/Code/auxita/disease-classifier/client/src/bloodPressure/BloodPressureComponent.tsx"],"names":["React","DatePicker","Hypertension","PureComponent","constructor","props","postData","url","data","response","fetch","method","mode","cache","credentials","headers","redirect","referrer","body","JSON","stringify","json","state","sysBp","undefined","diaBp","atDate","Date","classification","dateChangeHandler","date","setState","submit","process","env","REACT_APP_API_URL","then","console","log","catch","error","render","event","parseInt","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './bloodPressure.scss';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ninterface IProps {}\ninterface IState {\n    sysBp: number | undefined,\n    diaBp: number | undefined,\n    atDate: Date,\n    classification: string | undefined,\n}\n \nclass Hypertension extends React.PureComponent<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        \n        this.state = {\n            sysBp: undefined,\n            diaBp: undefined,\n            atDate: new Date(),\n            classification: undefined,\n        }\n    }\n\n    // formatDate(date: Date) {\n    //     return `${date.getFullYear().toString()}-${(date.getMonth() + 1).toString().padStart(2, \"0\")}-` +\n    //         `${date.getDate().toString().padStart(2, \"0\")}`;\n    // }\n\n    postData = async (url = '', data = {}) => {\n          const response = await fetch(url, {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrer: 'no-referrer',\n            body: JSON.stringify(data),\n        });\n        return await response.json();\n    }\n\n    dateChangeHandler(date: any) {\n        this.setState({ atDate: new Date(date) });\n    }\n\n    submit(sysBp: number, diaBp: number, atDate: Date) {\n        this.postData(`${process.env.REACT_APP_API_URL}/hypertension`, { sysBp: sysBp, diaBp: diaBp, atDate: atDate })\n        .then(data => console.log(data)) // TODO\n        .catch(error => console.error(error));\n    }\n\n    render() {\n        console.log(this.state);\n\n        \n\n        return <div className=\"hypertension-form-input\">\n            <label className=\"form-lbl\">Systole</label>\n            <input\n                type=\"number\"\n                id=\"sysBp\"\n                autoComplete=\"off\"\n                value={this.state.sysBp}\n                onChange={(event) => this.setState({ sysBp: parseInt(event.target.value) })}\n            />\n            <label className=\"form-lbl\">Diastole</label>\n            <input\n                type=\"number\"\n                id=\"diaBp\"\n                autoComplete=\"off\"\n                value={this.state.diaBp}\n                onChange={(event) => this.setState({ diaBp: parseInt(event.target.value) })}\n            />\n            <label className=\"form-lbl\">Date</label>\n            <DatePicker\n                selected={this.state.atDate}\n                onChange={(event) => this.dateChangeHandler(event)}\n            />\n            <div></div><button\n                className=\"submit\"\n                onClick={() => this.submit(\n                    this.state.sysBp ? this.state.sysBp : -1,\n                    this.state.diaBp ? this.state.diaBp : -1,\n                    this.state.atDate\n                )}\n            >Submit</button>\n        </div>\n    }\n}\n\nexport default Hypertension;"]},"metadata":{},"sourceType":"module"}